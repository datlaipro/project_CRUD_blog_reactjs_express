const User = require('../model/user');
const bcrypt = require('bcrypt');
const jwt = require('jsonwebtoken');
require('dotenv').config();

const SECRET_KEY = process.env.JWT_SECRET||"conbokhongcuoixYz1!";

async function loginUser(req, res) {
  const { username, password } = req.body;
  // console.log('ƒêƒÉng nh·∫≠p v·ªõi username:', username, 'password:', password,"SECRET_KEY",SECRET_KEY);

  try {
    const user = await User.findOne({ username });
    if (!user) {
      return res.status(400).json({ error: 'Sai username ho·∫∑c password' });
    }

    const isMatch = await bcrypt.compare(password, user.password);
    if (!isMatch) {
      return res.status(400).json({ error: 'Sai username ho·∫∑c password' });
    }

    // ‚úÖ T·∫°o JWT
    const token = jwt.sign(
      { userId: user._id, username: user.username },
      SECRET_KEY,
      { expiresIn: '1h' }
    );

    // ‚úÖ G·ª≠i token trong cookie
    res.cookie('token', token, {
      httpOnly: true,
      secure: false,        // üëâ B·∫≠t `true` n·∫øu d√πng HTTPS
      sameSite: 'lax',      // ho·∫∑c 'strict' n·∫øu c·∫ßn b·∫£o m·∫≠t cao h∆°n
      maxAge: 36000000,      // 1h
    });

    res.json({ message: 'ƒêƒÉng nh·∫≠p th√†nh c√¥ng',username });
  } catch (error) {
    res.status(500).json({ error: 'L·ªói server khi ƒëƒÉng nh·∫≠p' });
  }
}

module.exports = loginUser;
